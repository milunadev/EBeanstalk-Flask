name: deployToEB

#definimos el trigger, cuando haya algun push en la rama main.
on:
  push:
    branches: [main]

#definimos la logica del flujo en un solo job, con varios pasos con el fin de tener orden en el flujo
jobs:
  deploy:
    #Escogemos el entorno de ejecucion
    runs-on: ubuntu-latest
    steps:
      #Accion predefinida para copiar el repo en el entorno de ejecucion
      - uses: actions/checkout@v2    
      
      #Accion predefinida para recuperar credenciales de los secretos de github repo
      - name: Recuperar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      
      - name: Validar existencia y creacion del bucket S3 para el artifact
        run: bash scripts/checkBucketS3.sh ${{vars.AWS_BUCKET_NAME}} ${{vars.AWS_REGION}}
      
      - name: Crear el package ZIP para despliegue(artifact)
        run: zip -r artifact.zip requirements.txt application.py 
      
      - name: Cargar el artifact al bucket S3
        run: aws s3 cp artifact.zip s3://${{vars.AWS_BUCKET_NAME}}/
      
      - name: Validar existencia y creacion de la app y environment de Beanstalk
        run: bash scripts/checkAppBeanstalk.sh ${{vars.APP_NAME}} ${{vars.ENV_NAME}} ${{vars.BEANSTALK_ROLE}} ${{vars.AWS_REGION}} ${{vars.AWS_BUCKET_NAME}}
      
      - name: Crear una nueva version de la app desde el artifact en S3
        run: aws elasticbeanstalk create-application-version --application-name ${{vars.APP_NAME}} --version-label "mi-version" --source-bundle S3Bucket=${{vars.AWS_BUCKET_NAME}},S3Key=artifact.zip --region ${{vars.AWS_REGION}} --version-label "ver-${{ github.sha }}" --description "commit-sha-${{ github.sha }}"
      
      - name: Actualizar el entorno beanstalk con la nueva version
        run: aws elasticbeanstalk update-environment --application-name ${{vars.APP_NAME}} --environment-name ${{vars.ENV_NAME}} --region ${{vars.AWS_REGION}} --version-label "ver-${{ github.sha }}"